{
  "react arrow function component": {
    "prefix": "_rface",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contexts",
      "",
      "// Hooks",
      "",
      "// Components",
      "",
      "// Images",
      "",
      "// Styles",
      "",
      "/**",
      " * Description: Explains the purpose of this component and what issues it addresses.",
      " *",
      " * Implementation: Guidance on how to implement and utilize this component within the application.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  // States",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contexts",
      "",
      "  // Hooks",
      "",
      "  // Functions",
      "",
      "  // UseEffects",
      "  useEffect(() => {}, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Structure of a react component with arrow function, with the structure to work with our design system"
  },

  "react arrow function api component": {
    "prefix": "_rfaceapi",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contexts",
      "",
      "// Hooks",
      "",
      "// Components",
      "",
      "// Images",
      "",
      "// Styles",
      "",
      "/**",
      " * Description: Explains the purpose of this component and what issues it addresses.",
      " *",
      " * Implementation: Guidance on how to implement and utilize this component within the application.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  // States",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contexts",
      "",
      "  // Hooks",
      "",
      "  // Functions",
      "  const getData = async () => {",
      "     try {",
      "       // const data = await",
      "       console.log(data);",
      "     } catch (error) {",
      "       console.log(error);",
      "     }",
      "  };",
      "",
      "  // UseEffects",
      "  useEffect(() => {",
      "   getData();",
      "  }, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Structure of a react component with arrow function, with the structure for calling an API"
  },

  "react function component": {
    "prefix": "_rfc",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contexts",
      "",
      "// Hooks",
      "",
      "// Components",
      "",
      "// Images",
      "",
      "// Styles",
      "",
      "/**",
      " * Description: Explains the purpose of this component and what issues it addresses.",
      " *",
      " * Implementation: Guidance on how to implement and utilize this component within the application.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "",
      "function ${TM_FILENAME_BASE}$1() {",
      "  // States",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contexts",
      "",
      "  // Hooks",
      "",
      "  // Functions",
      "",
      "  // UseEffects",
      "  useEffect(() => {}, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Structure of a react component with function, with the structure to work with our design system"
  },

  "react function api component": {
    "prefix": "_rfcapi",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contexts",
      "",
      "// Hooks",
      "",
      "// Components",
      "",
      "// Images",
      "",
      "// Styles",
      "",
      "/**",
      "* Description: ",
      "*",
      "* Implementation: Guidance on how to implement and utilize this component within the application.",
      "*",
      "* Known Issues: Describes any known bugs and their workarounds or solutions.",
      "*/",
      "",
      "function ${TM_FILENAME_BASE}$1() {",
      "  // States",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contexts",
      "",
      "  // Hooks",
      "",
      "  // Functions",
      "  const getData = async () => {",
      "     try {",
      "       // const data = await",
      "       console.log(data);",
      "     } catch (error) {",
      "       console.log(error);",
      "     }",
      "  };",
      "",
      "  // UseEffects",
      "  useEffect(() => {",
      "   getData();",
      "  }, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "A React arrow function component template, structured for use with our design system, including library imports, hooks, and contextual setup."
  },

  "react hook": {
    "prefix": "_rhook",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import { useState, useEffect } from 'react';",
      "",
      "// Otros",
      "",
      "/**",
      " * Description hook: Explains the purpose of this component and what issues it addresses.",
      " *",
      " * Implimentation: Guidance on how to implement and utilize this component within the application.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  const [tests, setTests] = useState([]);",
      "",
      "  useEffect(() => {}, []);",
      "",
      "  return tests;",
      "};",
      "",
      "export default ${TM_FILENAME_BASE}$1;",
      ""
    ],
    "description": "Structure of a hook in react, with the structure to work with our design system."
  },

  "react context": {
    "prefix": "_rcontext",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import { createContext, useState } from 'react';",
      "",
      "// Otros",
      "",
      "/**",
      " * Description context: La Description de por qué estamos haciendo este context y que resuelve.",
      " *",
      " * Implimentation: Description sobre cómo puedes implementar el context.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "const ${TM_FILENAME_BASE}$1 = createContext();",
      "",
      "export function Provider({ children }) {",
      "  const [state$2, setState$3] = useState();",
      "",
      "  return (",
      "    <${TM_FILENAME_BASE}$1.Provider value={{ state$2, setState$3 }}>{children}</${TM_FILENAME_BASE}$1.Provider>",
      "  );",
      "}",
      "export default ${TM_FILENAME_BASE}$1;",
      ""
    ],
    "description": "Structure of a context in react, with the structure to work with our design system."
  },

  "react native arrow function component": {
    "prefix": "_rnfe",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Libraries",
      "import React, { useEffect, useState } from 'react';",
      "import { View, Text, StyleSheet } from 'react-native';",
      "import { SafeAreaView } from 'react-native-safe-area-context';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contexts",
      "",
      "// Hooks",
      "",
      "// Screens",
      "",
      "// Components",
      "",
      "// Navigations",
      "",
      "// Images",
      "",
      "// Styles",
      "",
      "/**",
      " * Description: Explains the purpose of this component and what issues it addresses.",
      " *",
      " * Implementation: Guidance on how to implement and utilize this component within the application.",
      " *",
      " * Known Issues: Describes any known bugs and their workarounds or solutions.",
      " */",
      "",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  // States",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contexts",
      "",
      "  // Hooks",
      "",
      "  // Functions",
      "",
      "  // UseEffects",
      "  useEffect(() => {}, []);",
      "",
      "  // Renders",
      "  return  <SafeAreaView><View><Text>$2</Text></View></SafeAreaView>;",
      "};",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "const styles = StyleSheet.create({})",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Structure of a react native component with arrow function, with the structure to work with our design system"
  }
}
