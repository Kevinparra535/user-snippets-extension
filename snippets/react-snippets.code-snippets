{
  "react arrow function component": {
    "prefix": "_rface",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contextos",
      "",
      "// Hooks",
      "",
      "// Componentes",
      "",
      "// Imagenes",
      "",
      "// Estilos",
      "",
      "/**",
      " * Descripción: La descripción de por qué estamos haciendo este componente y que resuelve.",
      " *",
      " * Implementación: Descripción sobre cómo puedes implementar el componente.",
      " *",
      " * Bugs: Qué bugs se han presentado y como se solucionan.",
      " */",
      "",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  // Estados",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contextos",
      "",
      "  // Hooks",
      "",
      "  // Funciones",
      "",
      "  // UseEffects",
      "  useEffect(() => {}, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Estructura de un componente react con arrow function, con la estructura para trabajar con nuestro sistema de diseño"
  },

  "react arrow function api component": {
    "prefix": "_rfaceapi",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contextos",
      "",
      "// Hooks",
      "",
      "// Componentes",
      "",
      "// Imagenes",
      "",
      "// Estilos",
      "",
      "/**",
      " * Descripción: La descripción de por qué estamos haciendo este componente y que resuelve.",
      " *",
      " * Implementación: Descripción sobre cómo puedes implementar el componente.",
      " *",
      " * Bugs: Qué bugs se han presentado y como se solucionan.",
      " */",
      "",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  // Estados",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contextos",
      "",
      "  // Hooks",
      "",
      "  // Funciones",
      "  const getData = async () => {",
      "     try {",
      "       // const data = await",
      "       console.log(data);",
      "     } catch (error) {",
      "       console.log(error);",
      "     }",
      "  };",
      "",
      "  // UseEffects",
      "  useEffect(() => {",
      "   getData();",
      "  }, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Estructura de un componente react con arrow function, con la estructura para llamar a una api"
  },

  "react function component": {
    "prefix": "_rfc",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contextos",
      "",
      "// Hooks",
      "",
      "// Componentes",
      "",
      "// Imagenes",
      "",
      "// Estilos",
      "",
      "/**",
      " * Descripción: La descripción de por qué estamos haciendo este componente y que resuelve.",
      " *",
      " * Implementación: Descripción sobre cómo puedes implementar el componente.",
      " *",
      " * Bugs: Qué bugs se han presentado y como se solucionan.",
      " */",
      "",
      "",
      "function ${TM_FILENAME_BASE}$1() {",
      "  // Estados",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contextos",
      "",
      "  // Hooks",
      "",
      "  // Funciones",
      "",
      "  // UseEffects",
      "  useEffect(() => {}, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Estructura de un componente react con function, con la estructura para trabajar con nuestro sistema de diseño"
  },

  "react function api component": {
    "prefix": "_rfcapi",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import React, { useEffect, useState } from 'react';",
      "import PropTypes from 'prop-types';",
      "",
      "// Contextos",
      "",
      "// Hooks",
      "",
      "// Componentes",
      "",
      "// Imagenes",
      "",
      "// Estilos",
      "",
      "/**",
      "* Descripción: La descripción de por qué estamos haciendo este componente y que resuelve.",
      "*",
      "* Implementación: Descripción sobre cómo puedes implementar el componente.",
      "*",
      "* Bugs: Qué bugs se han presentado y como se solucionan.",
      "*/",
      "",
      "function ${TM_FILENAME_BASE}$1() {",
      "  // Estados",
      "  const [data, setData] = useState([]);",
      "",
      "  // Contextos",
      "",
      "  // Hooks",
      "",
      "  // Funciones",
      "  const getData = async () => {",
      "     try {",
      "       // const data = await",
      "       console.log(data);",
      "     } catch (error) {",
      "       console.log(error);",
      "     }",
      "  };",
      "",
      "  // UseEffects",
      "  useEffect(() => {",
      "   getData();",
      "  }, []);",
      "",
      "  // Renders",
      "  return <>$2</>;",
      "};",
      "",
      "",
      "",
      "${TM_FILENAME_BASE}$1.propTypes = {}",
      "",
      "${TM_FILENAME_BASE}$1.defaultProps = {};",
      "",
      "",
      "export default ${TM_FILENAME_BASE}$1;"
    ],
    "description": "Estructura de un componente react con function, con la estructura para llamar a una api"
  },

  "react hook": {
    "prefix": "_rhook",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import { useState, useEffect } from 'react';",
      "",
      "// Otros",
      "",
      "/**",
      " * Descripcion del hook: La descripción de por qué estamos haciendo este hook y que resuelve.",
      " *",
      " * Implementacion: Descripción sobre cómo puedes implementar el hook.",
      " *",
      " * Bugs: Qué bugs se han presentado y como se solucionan.",
      " */",
      "",
      "const ${TM_FILENAME_BASE}$1 = () => {",
      "  const [tests, setTests] = useState([]);",
      "",
      "  useEffect(() => {}, []);",
      "",
      "  return tests;",
      "};",
      "",
      "export default ${TM_FILENAME_BASE}$1;",
      ""
    ],
    "description": "Estructura de un hook en react, con la estructura para trabajar con nuestro sistema de diseño"
  },

  "react context": {
    "prefix": "_rcontext",
    "scope": "javascript, javascriptreact",
    "body": [
      "",
      "// Librerias",
      "import { createContext, useState } from 'react';",
      "",
      "// Otros",
      "",
      "/**",
      " * Descripcion del context: La descripción de por qué estamos haciendo este context y que resuelve.",
      " *",
      " * Implementacion: Descripción sobre cómo puedes implementar el context.",
      " *",
      " * Bugs: Qué bugs se han presentado y como se solucionan.",
      " */",
      "",
      "const ${TM_FILENAME_BASE}$1 = createContext();",
      "",
      "export function Provider({ children }) {",
      "  const [state$2, setState$3] = useState();",
      "",
      "  return (",
      "    <${TM_FILENAME_BASE}$1.Provider value={{ state$2, setState$3 }}>{children}</${TM_FILENAME_BASE}$1.Provider>",
      "  );",
      "}",
      "export default ${TM_FILENAME_BASE}$1;",
      ""
    ],
    "description": "Estructura de un contexto en react, con la estructura para trabajar con nuestro sistema de diseño"
  },
}
